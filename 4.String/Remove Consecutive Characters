string Solution::solve(string A, int B) {
    int n = A.length();
    stack<pair<char , int> > s;
    if(n==0){
        return A;
    }
    
    
    for(int i=0;i<n;i++){
        
        if(s.empty()){
            s.push({A[i],1});
            continue;
        }
        if(s.top().second == B){
            s.pop();
            s.push({A[i],1});
        }
        else if(s.top().first == A[i]){ // if top element is same as A[i], then increase freq
            s.top().second++;
        }else{
            s.push({A[i],1});
        }
        
    }
    
    if(s.top().second == B){
            s.pop();
        }
    string ans = "";
    while(!s.empty()){
        auto p = s.top();
        while(p.second--){
            ans = p.first + ans;
        }
        s.pop();
    }
    return ans;
}
